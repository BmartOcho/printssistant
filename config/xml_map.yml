# Normalized field → XPath (first non-empty wins when pipes/() used)

# —— Basics ——
product: "string((//ProductName | //ProductCode | //Title | //JobName)[1])"

# Finished size in inches from a single '8.5x5.5' node
trim_w_in: "number(substring-before(//FinishedSize, 'x'))"
trim_h_in: "number(substring-after(//FinishedSize, 'x'))"

bleed_in:  "number((//Bleed)[1])"
safety_in: "number((//Safety)[1])"
pages:     "number((//Pages | //QtyPages)[1])"

# Colors (force strings so missing becomes '')
colors.front: "string((//ProcessFront | //ColorsFront | //FrontColors)[1])"
colors.back:  "string((//ProcessBack  | //ColorsBack  | //BackColors)[1])"

# Stock/finish
stock:  "string((//Stock | //Paper | //Media)[1])"
finish: "string((//Finish | //Coating | //Lamination)[1])"

# Misc hints
imposition_hint: "string((//ImpositionHint | //ProductCategory)[1])"

# Dates
due_at: "string((//CustomerExpectedDateUTC | //DueUTC)[1])"

# —— Special bag (free-form) ——
special.stock_group:      "string(//StockGroup)"
special.imposition_across: "string((//ImposeAcross)[1])"
special.imposition_down:   "string((//ImposeDown)[1])"
special.artwork_file:     "normalize-space(string((//ArtworkFile | //FileName)[1]))"
# IMPORTANT: map to single string (not node-set)
special.machine:          "normalize-space(string((//Machine)[1]))"
